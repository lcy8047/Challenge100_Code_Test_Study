#include <iostream>
#include <sstream>
#include <vector>
#include <string>
#include <cmath>

using namespace std;

vector<char> code;
int bitArr[513][513];
int N;

void split(string input, char delimiter, int i){
    stringstream ss(input);
    string tmp;
    
    string hex = "0123456789abcdef";
    
    int j=0, cnt;
    while(getline(ss, tmp, delimiter)){
        int a = hex.find(tmp[3]);
        cnt = 4;
        while(cnt--){
            bitArr[i][j + cnt] = a / pow(2, cnt);
            a %= (int)pow(2, cnt);
        }
        j += 4;
        
        int b = hex.find(tmp[2]);
        cnt = 4;
        while(cnt--){
            bitArr[i][j + cnt] = b / pow(2, cnt);
            b %= (int)pow(2, cnt);
        }
        j += 4;
    }
    
    return;
}

void getInput(){
    string tmp;
    getline(cin, tmp);
    getline(cin, tmp);
    N = stoi(tmp.substr(24));
    getline(cin, tmp);
    
    int i;
    for(i=0; i<N; i++){
        getline(cin, tmp);
        split(tmp, ',', i);
    }
    
    getline(cin, tmp);
}

int check(int n, int idx, int jdx){
    int i, j;
    for(i=0; i<n; i++){
        for(j=0; j<n; j++){
            if(bitArr[idx][jdx] != bitArr[idx+i][jdx+j])
                return i;
        }
    }
    return i;
}

void makeCode(int n, int idx, int jdx){
    int i = check(n, idx, jdx);
    if(i == n){
        code.push_back(bitArr[idx][jdx] == 1 ? 'B' : 'W');
    } else {
        code.push_back('Q');
        int half = n/2;
        makeCode(half, idx, jdx);
        makeCode(half, idx, jdx+half);
        makeCode(half, idx+half, jdx);
        makeCode(half, idx+half, jdx+half);
    }
}

void printAnswer(){
    cout << N << "\n";
    for(auto a:code){
        cout << a;
    }
}

int main(){
    getInput();
    
    makeCode(N, 0, 0);
    printAnswer();
    
    return 0;
}
